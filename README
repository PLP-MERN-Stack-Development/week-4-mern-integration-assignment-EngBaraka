# 📝 MERN Stack Blog Application

This is a full-stack blog application built using the **MERN Stack**:  
**MongoDB, Express.js, React.js, and Node.js**.

It allows users to create and manage blog posts and categories, demonstrating seamless integration between front-end and back-end technologies.

---

## 🚀 Features

- ✅ Create, Read, Update, and Delete (CRUD) blog posts
- ✅ Manage blog categories
- ✅ RESTful API built with Express.js + MongoDB
- ✅ React frontend with Axios for API requests
- ✅ Environment variable setup using `.env`
- ✅ Clean folder structure
- 🔜 (Extendable): Authentication, image uploads, pagination, comments

---

## 📁 Project Structure

mern-blog/
├── client/ # React front-end (Vite)
│ ├── src/
│ │ ├── components/ # Reusable UI components
│ │ ├── pages/ # Page-level components
│ │ ├── hooks/ # Custom React hooks
│ │ ├── services/ # Axios API services
│ │ └── App.jsx
│ └── .env.example # Client environment config
├── server/ # Express.js back-end
│ ├── config/ # MongoDB config
│ ├── models/ # Mongoose schemas
│ │ ├── Post.js
│ │ └── Category.js
│ ├── routes/ # API route handlers
│ │ └── postRoutes.js
│ ├── controllers/ # Route logic
│ │ └── postController.js
│ ├── middleware/ # Custom middleware (future use)
│ ├── utils/ # Utility functions (optional)
│ ├── server.js # Main server file
│ └── .env.example # Server environment config
└── README.md # Project documentation

Frontend Setup (/client)

---

## ⚙️ Setup Instructions

### 🔹 Backend Setup (`/server`)
```bash
cd server
npm install
cp .env.example .env
# Edit `.env` with your MongoDB connection string
npm run dev



cd client
npm install
cp .env.example .env
npm run dev

server/.env.example

PORT=5000
MONGO_URI=your_mongodb_connection_string


client/.env.example

VITE_API_URL=http://localhost:5000/api

